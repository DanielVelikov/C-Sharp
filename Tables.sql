
-- CREATING TABLES
IF OBJECT_ID('USERS', 'U') IS NOT NULL 
	DROP TABLE USERS; 

CREATE TABLE USERS (
	
	ID INT IDENTITY(1,1) NOT NULL,
	[USERNAME] NVARCHAR (16) NOT NULL,
	[PASSWORD] NVARCHAR (16) NOT NULL,
	COMPANY_ID INT NOT NULL,
	CONSTRAINT PK_USERS_ID PRIMARY KEY (ID)
);
GO	

IF OBJECT_ID('TRANSACTIONS', 'U') IS NOT NULL 
	DROP TABLE TRANSACTIONS; 

CREATE TABLE TRANSACTIONS (
	
	ID INT IDENTITY(1,1) NOT NULL,
	UPDATE_COUNTER INT NOT NULL,
	[NAME] NVARCHAR (32) NOT NULL,
	TRANSACTION_TYPE_ID INT NOT NULL,
	ACCOUNT_ID INT NOT NULL,
	AMOUNT FLOAT NOT NULL,
	[DATE] DATE NOT NULL,
	PROJECT_ID INT NOT NULL,
	CONSTRAINT PK_TRANSACTION_ID PRIMARY KEY (ID)
);
GO	

IF OBJECT_ID('PROJECTS', 'U') IS NOT NULL 
	DROP TABLE PROJECTS; 

CREATE TABLE PROJECTS (
	
	ID INT IDENTITY(1,1) NOT NULL,
	UPDATE_COUNTER INT NOT NULL,
	[NAME] NVARCHAR (32) NOT NULL,
	COMPANY_ID INT NOT NULL,
	[PROJECT_SIZE_ID] INT NOT NULL,
	[START_DATE] DATE NOT NULL,
	[END_DATE] DATE NOT NULL,
	BUDGET FLOAT NOT NULL, 
	CONSTRAINT PK_PROJECTS_ID PRIMARY KEY (ID)
);
GO

IF OBJECT_ID('ACCOUNTS', 'U') IS NOT NULL 
	DROP TABLE ACCOUNTS; 

CREATE TABLE ACCOUNTS (
	
	ID INT IDENTITY(1,1) NOT NULL,
	UPDATE_COUNTER INT NOT NULL,
	[NAME] NVARCHAR (32) NOT NULL,
	ACCOUNT_TYPE_ID INT NOT NULL,
	COMPANY_ID INT NOT NULL,
	CONSTRAINT PK_ACCOUNTS_ID PRIMARY KEY (ID)
);
GO

IF OBJECT_ID('COMPANIES', 'U') IS NOT NULL 
	DROP TABLE COMPANIES; 

CREATE TABLE COMPANIES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	UPDATE_COUNTER INT NOT NULL,
	[NAME] NVARCHAR(32) NOT NULL,
	CITY_ID INT NOT NULL,
	FIELD_ID INT NOT NULL,
	[ADDRESS] NVARCHAR (64) NOT NULL, 
	CONSTRAINT PK_COMPANIES_ID PRIMARY KEY (ID)
	
);
GO

IF OBJECT_ID('FIELDS', 'U') IS NOT NULL 
	DROP TABLE FIELDS; 

CREATE TABLE FIELDS(

	ID INT NOT NULL IDENTITY(1,1)  ,
	UPDATE_COUNTER INT NOT NULL,
	FIELD_TYPE_ID INT NOT NULL,
	[NAME] NVARCHAR(16) NOT NULL,
	CONSTRAINT PK_FIELDS_ID PRIMARY KEY (ID)

);
GO

IF OBJECT_ID('CITIES', 'U') IS NOT NULL 
	DROP TABLE CITIES; 

CREATE TABLE CITIES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	UPDATE_COUNTER INT NOT NULL,
	[NAME] NVARCHAR(64) NOT NULL,
	REGION NVARCHAR(64) NOT NULL,
	CONSTRAINT PK_CITIES_ID PRIMARY KEY (ID)
);
GO

IF OBJECT_ID('FIELD_TYPES', 'U') IS NOT NULL 
	DROP TABLE FIELD_TYPES; 

CREATE TABLE FIELD_TYPES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	[FIELD_TYPE] NVARCHAR (16) NOT NULL,
	CONSTRAINT PK_FIELD_TYPES_ID PRIMARY KEY (ID)
);
GO

IF OBJECT_ID('PROJECT_SIZES', 'U') IS NOT NULL 
	DROP TABLE PROJECT_SIZES; 

CREATE TABLE PROJECT_SIZES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	[PROJECT_SIZE] NVARCHAR (16) NOT NULL,
	CONSTRAINT PK_PROJECT_SIZES_ID PRIMARY KEY (ID)
);
GO

IF OBJECT_ID('TRANSACTION_TYPES', 'U') IS NOT NULL 
	DROP TABLE TRANSACTION_TYPES; 

CREATE TABLE TRANSACTION_TYPES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	[NAME] NVARCHAR (16) NOT NULL,
	CONSTRAINT PK_TRANSACTION_TYPES_ID PRIMARY KEY (ID)
);
GO	

IF OBJECT_ID('ACCOUNT_TYPES', 'U') IS NOT NULL 
	DROP TABLE ACCOUNT_TYPES; 

CREATE TABLE ACCOUNT_TYPES (
	
	ID INT IDENTITY(1,1) NOT NULL,
	[NAME] NVARCHAR (16) NOT NULL,
	CONSTRAINT PK_ACCOUNT_TYPES_ID PRIMARY KEY (ID)
);
GO	

-- CONNECTION BETWEEN TABLES
ALTER TABLE COMPANIES 
	ADD CONSTRAINT FK_COMPANIES_CITY_ID
	FOREIGN KEY(CITY_ID) REFERENCES CITIES(ID)
GO

ALTER TABLE COMPANIES 
	ADD CONSTRAINT FK_COMPANIES_FIELD_ID
	FOREIGN KEY(FIELD_ID) REFERENCES FIELDS(ID)
GO

ALTER TABLE FIELDS 
	ADD CONSTRAINT FK_FIELDS_FIELD_TYPE_ID
	FOREIGN KEY(FIELD_TYPE_ID) REFERENCES FIELD_TYPES(ID)
GO

ALTER TABLE PROJECTS 
	ADD CONSTRAINT FK_PROJECTS_PROJECT_SIZES_ID
	FOREIGN KEY(PROJECT_SIZE_ID) REFERENCES PROJECT_SIZES(ID)
GO

ALTER TABLE PROJECTS 
	ADD CONSTRAINT FK_COMPANY_PROJECTS_ID
	FOREIGN KEY(COMPANY_ID) REFERENCES COMPANIES(ID)
GO

ALTER TABLE ACCOUNTS 
	ADD CONSTRAINT FK_COMPANY_ACCOUNTS_ID
	FOREIGN KEY(COMPANY_ID) REFERENCES COMPANIES(ID)
GO

ALTER TABLE ACCOUNTS 
	ADD CONSTRAINT FK_ACCOUNT_TYPE_ID
	FOREIGN KEY(ACCOUNT_TYPE_ID) REFERENCES ACCOUNT_TYPES(ID)
GO

ALTER TABLE TRANSACTIONS
	ADD CONSTRAINT FK_ACCOUNT_TRANSACTIONS_ID
	FOREIGN KEY(ACCOUNT_ID) REFERENCES ACCOUNTS(ID)
GO

ALTER TABLE TRANSACTIONS
	ADD CONSTRAINT FK_TRANSACTION_TRANSACTION_TYPE_ID
	FOREIGN KEY(TRANSACTION_TYPE_ID) REFERENCES TRANSACTION_TYPES(ID)
GO

ALTER TABLE TRANSACTIONS
	ADD CONSTRAINT FK_TRANSACTION_PROJECT_ID
	FOREIGN KEY(PROJECT_ID) REFERENCES PROJECTS(ID)
GO

ALTER TABLE USERS 
	ADD CONSTRAINT FK_COMPANY_USERS_ID
	FOREIGN KEY(COMPANY_ID) REFERENCES COMPANIES(ID)
GO


--UNIQUE VALUES
CREATE UNIQUE INDEX UX_COMPANIES_NAME 
	ON COMPANIES([NAME]);
GO

CREATE UNIQUE INDEX UX_FIELD_TYPE 
	ON FIELD_TYPES([FIELD_TYPE]);
GO

CREATE UNIQUE INDEX UX_CITIES_NAME 
	ON CITIES([NAME]);
GO

CREATE UNIQUE INDEX UX_PROJECTS_NAME 
	ON PROJECTS([NAME]);
GO

CREATE UNIQUE INDEX UX_ACCOUNTS_NAME 
	ON ACCOUNTS([NAME]);
GO

CREATE UNIQUE INDEX UX_ACCOUNT_TYPES_NAME 
	ON ACCOUNT_TYPES([NAME]);
GO

CREATE UNIQUE INDEX UX_PROJECT_SIZE
	ON PROJECT_SIZES(PROJECT_SIZE);
GO

CREATE UNIQUE INDEX UX_TRANSACTION_TYPE_NAME 
	ON TRANSACTION_TYPES([NAME]);
GO

--SEARCH INDEXING 
CREATE INDEX IX_COMAPNIES_CITY_ID
	ON COMPANIES(CITY_ID)
GO

CREATE INDEX IX_COMPANIES_FIELD_ID
	ON COMPANIES(FIELD_ID)
GO

CREATE INDEX IX_FIELDS_FIELD_TYPE_ID
	ON FIELDS(FIELD_TYPE_ID)
GO

CREATE INDEX IX_PROJECTS_COMPANY_ID
	ON PROJECTS(COMPANY_ID)
GO

CREATE INDEX IX_PROJECTS_PROJECT_SIZE_ID
	ON PROJECTS(PROJECT_SIZE_ID)
GO

CREATE INDEX IX_ACCOUNTS_COMPANY_ID
	ON ACCOUNTS(COMPANY_ID)
GO

CREATE INDEX IX_ACCOUNTS_ACCOUNT_TYPE_ID
	ON ACCOUNTS(ACCOUNT_TYPE_ID)
GO

CREATE INDEX IX_TRANSACTIONS_ACCOUNT_ID
	ON TRANSACTIONS(ACCOUNT_ID)
GO

CREATE INDEX IX_TRANSACTIONS_TRANSACTION_TYPE_ID
	ON TRANSACTIONS(TRANSACTION_TYPE_ID)
GO

CREATE INDEX IX_TRANSACTIONS_PROJECT_ID
	ON TRANSACTIONS(PROJECT_ID)
GO

--CONSTRAINTS
ALTER TABLE PROJECTS 
	ADD CONSTRAINT DF_PROJECT_START_DATE DEFAULT GETDATE() 
	FOR [START_DATE]
GO

ALTER TABLE TRANSACTIONS
	ADD CONSTRAINT DF_TRANSACTION_DATE DEFAULT GETDATE() 
	FOR [DATE]
GO